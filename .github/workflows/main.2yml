# name: Running Unit Test, Build Docker Image,  Push To Docker Hub and Deploy To EC2

# on:
#   pull_request:
#     branches:
#       - 'main'
#   push: 
#     branches:
#       - 'main'

# jobs:
#   unit-test:
#     name: "unit test"
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2  
#     - name: Set up Go
#       uses: actions/setup-go@v2
#       with:
#         go-version: 1.16

#     # - name: running unitest
#     #   run: |
#     #     echo "${{ secrets.ENV }}" > ./app/config/config.json
#     #     # mv ./app/config/example-config.json ./app/config/config.json
#     #     go mod tidy
#     #     go test ./... -cover -failfast

#     - name: running unitest
#       run: go test ./... -cover -failfast

#     - name: login docker to docker hub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKER_HUB_USERNAME }} 
#         password: ${{ secrets.DOCKER_HUB_PASSWORD }}  
    
#     - name: docker build golang
#       run: |
#         docker build . -t moryku/kampus_merdeka:1.0.0

#     - name: docker push
#       run: |
#         docker push moryku/kampus_merdeka:1.0.0

#   build-deploy:    
#     name: "build, push to docker hub, & deploy to ec2"
#     runs-on: ubuntu-latest
#     needs: unit-test
#     steps:
#     - uses: actions/checkout@v2 
#     - name: Configure SSH
#       env:
#           SSH_USER: ${{ secrets.SSH_USERNAME }}
#           SSH_KEY: ${{ secrets.SSH_KEY }}
#           SSH_HOST: ${{ secrets.SSH_HOST }}
#       run: |
#         mkdir -p ~/.ssh/
#         echo "$SSH_KEY" > ~/.ssh/alterra_academy_aws.pem
#         chmod 400 ~/.ssh/alterra_academy_aws.pem
#         cat >>~/.ssh/config <<END
#         Host staging
#           HostName $SSH_HOST
#           User $SSH_USER
#           IdentityFile ~/.ssh/alterra_academy_aws.pem
#           StrictHostKeyChecking=no
#         END
#     - name: deployment Client API & Internal API
#       run: ssh staging 'docker rm -f $(docker ps -a -q) && docker pull moryku/kampus_merdeka:1.0.0 && docker run -d -p 8080:8080 --name kampus_merdeka moryku/kampus_merdeka:1.0.0'


#     # - name: Build, Push and Release a Docker container to Heroku.
#     #   uses: gonuit/heroku-docker-deploy@v1.3.3
#     #   with: 
#     #     email: ${{ secrets.HEROKU_EMAIL }}
#     #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
#     #     heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
#     #     dockerfile_directory: ./
#     #     dockerfile_name: Dockerfile
#     #     docker_options: "--no-cache"
#     #     process_type: web
